# ./nginx/conf-prod/production.conf

# Define rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/s;
limit_req_status 429;

# Define a variable to track rate limited requests
map $status $limit_exceeded {
    429     1;
    default 0;
}

# Custom log format for rate limiting
log_format ratelimit '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$request_time"';

server {
    listen 80;
    # --- CHANGE HERE: Use specific domain names ---
    server_name babloapp.com www.babloapp.com;

    # --- CHANGE HERE: Handle Let's Encrypt challenge requests ---
    # This location block will serve the challenge files directly
    # from the shared volume, allowing Certbot to verify the domain.
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all other HTTP traffic to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    # --- CHANGE HERE: Use specific domain names ---
    server_name babloapp.com www.babloapp.com;

    # Log rate-limited requests to a separate file
    access_log /var/log/nginx/ratelimit.log ratelimit if=$limit_exceeded;

    # --- CHANGE HERE: Use standard Let's Encrypt paths ---
    # These paths point to the certificates managed by the Certbot service.
    ssl_certificate /etc/letsencrypt/live/babloapp.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/babloapp.com/privkey.pem;

    # Modern SSL settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers off;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 1d;
    ssl_session_tickets off;

    # --- Locations ---

    # Rate limiting for API endpoints - allows burst of 20 requests
    location / {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://server:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Stricter rate limiting for authentication endpoints
    location ~ ^/(users/login|users/register) {
        limit_req zone=login_limit burst=10 nodelay;

        proxy_pass http://server:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Grafana - accessible via https://<your-domain>/metrics
    location /metrics {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://grafana:3000;
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Prefix /metrics;
    }
    
    # --- CHANGE HERE: Removed the old .well-known proxy_pass block ---
    # It is no longer needed as the http block handles the challenge.
}