# ./nginx/conf-local/local.conf

# Define rate limiting zones (kept for consistency, adjust rates if needed for local)
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=login_limit:10m rate=5r/s;
limit_req_status 429;

# Define a variable to track rate limited requests
map $status $limit_exceeded {
    429     1;
    default 0;
}

# Custom log format for rate limiting
log_format ratelimit '$remote_addr - $remote_user [$time_local] '
                    '"$request" $status $body_bytes_sent '
                    '"$http_referer" "$http_user_agent" "$request_time"';

server {
    # Listen on HTTP port 80 only
    listen 80;
    server_name _; # Or localhost if preferred for local dev

    # Log rate-limited requests to a separate file (still useful locally)
    # Ensure ./nginx/logs directory exists or adjust path
    access_log /var/log/nginx/ratelimit.log ratelimit if=$limit_exceeded;

    # NO SSL configuration needed

    # --- Locations ---

    # Rate limiting for API endpoints - allows burst of 20 requests
    location / {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://server:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Will be 'http'
    }

    # Stricter rate limiting for authentication endpoints
    location ~ ^/(users/login|users/register) {
        limit_req zone=login_limit burst=10 nodelay;

        proxy_pass http://server:5001;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Will be 'http'
    }

    # Grafana - accessible via http://<your-ip>/metrics
    location /metrics {
        limit_req zone=api_limit burst=20 nodelay;

        proxy_pass http://grafana:3000; # Ensure Grafana service name matches
        proxy_set_header Host $http_host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Will be 'http'
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Prefix /metrics;
    }

    # Static files for .well-known
    location /.well-known/ {
        limit_req zone=api_limit burst=50 nodelay;

        proxy_pass http://server:5001/.well-known/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Will be 'http'
    }
}