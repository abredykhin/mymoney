openapi: 3.0.3
info:
  title: Bablo app API.
  version: 1.0.0
servers:
  - url: http://babloapp.com:5001
    description: Main (production) server
  - url: http://localhost:3000
    description: Localhost dev server
paths:
  /users/register:
    post:
      operationId: userRegister
      summary: Registers a new user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: myusername
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing username or password
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Username already taken
  /users/login:
    post:
      operationId: userLogin    
      summary: Logins an existing user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid username or password
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing username or password
  /link-token:
    post:
      summary: Generates a Link token
      operationId: getLinkToken 
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Link token response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkTokenResponse'
  /items:
    post:
      summary: Saves new Plaid Item.
      operationId: saveNewItem
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                institutionId:
                  type: string
                publicToken:
                  type: string
      responses:
        200:
          description: Item created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Item'

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
  schemas:
    UserWithToken:
      type: object
      required: [token, user]
      properties:
        token:
          type: string
          example: 25893ed5f97eb70587d1e04d7a9335d3c6e2065b4368590d9d55d0be1f75a009
          description: Authentication token (sensitive information)
        user:
          type: object
          required: [id, username]
          properties:
            id:
              type: string
              example: 11
            username:
              type: string
              example: username
    LinkTokenResponse:
      type: object
      required:
        - expiration
        - link_token
        - request_id
      properties:
        expiration:
          type: string
          format: date-time
        link_token:
          type: string
        request_id:
          type: string
    Item:
      type: object
      required:
        - id
        - user_id
        - plaid_institution_id
        - status
      properties:
        id:
          type: integer
          format: int64
        plaid_institution_id:
          type: string
        status:
          type: string