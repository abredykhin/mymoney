openapi: 3.0.3
info:
  title: Bablo app API.
  version: 1.0.0
servers:
  - url: http://babloapp.com:5001
    description: Main (production) server
  #- url: http://staging-api.example.com
  #  description: Optional server description, e.g. Internal staging server for testing
paths:
  /users/register:
    post:
      summary: Registers a new user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: myusername
                password:
                  type: string
                  example: password
      responses:
        '200':
          description: User created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 25893ed5f97eb70587d1e04d7a9335d3c6e2065b4368590d9d55d0be1f75a009
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      username:
                        type: string
                        example: username
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing username or password
        '409':
          description: Username already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Username already taken
  /users/login:
    post:
      summary: Logins an existing user
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: username
                password:
                  type: string
                  example: password
                  description: Password (will not be stored in API response)
      responses:
        '200':
          description: User logged in successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: 25893ed5f97eb70587d1e04d7a9335d3c6e2065b4368590d9d55d0be1f75a009
                    description: Authentication token (sensitive information)
                  user:
                    type: object
                    properties:
                      id:
                        type: integer
                        example: 11
                      username:
                        type: string
                        example: username
        '401':
          description: Invalid username or password
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid username or password
        '400':
          description: Invalid request data
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Missing username or password