version: "3.4"

volumes:
  pg_sandbox_data:
  pg_development_data:
  server_data:
  db_data:
  redis-data:
  loki-data:
  grafana-data:
  app-logs:
  
services:
  postgresdb:
    image: postgres:16.2
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./database/create.sql:/docker-entrypoint-initdb.d/create.sql   
    networks:
      - app-network
      
  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - app-network

  server:
    build: ./server
    env_file: ./.env
    restart: unless-stopped
    # No longer expose ports externally - only accessible within Docker network
    # No longer expose 80/443 directly - Nginx will handle these
    environment:
      PLAID_CLIENT_ID:
      PLAID_SECRET_SANDBOX:
      PLAID_SECRET_PROD:
      PLAID_SANDBOX_REDIRECT_URI:
      PLAID_DEVELOPMENT_REDIRECT_URI:
      PLAID_ENV:
      PORT: 5001
      DB_PORT: 5432
      DB_HOST_NAME: postgresdb
      NODE_ENV: development
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_USE_TLS: "false"
      POSTGRES_HOST: postgresdb
      POSTGRES_PORT: 5432
    depends_on:
      - postgresdb
      - redis
    stdin_open: true
    tty: true
    volumes:
      - ./server:/opt/server  # <- Breaks bccrypt and discouraged generally
      - /opt/server/node_modules # anonymous volume for node_modules only
      - ./server/static:/opt/server/static # Mount the static folder only
      - app-logs:/opt/server/logs # Persist logs using the app-logs volume
    networks:
      - app-network

  migrate-db:
    build:
      context: .
      dockerfile: ./server/Dockerfile.migrate-db
    env_file: ./.env
    environment:
      DB_PORT: 5432
      DB_HOST_NAME: postgresdb
      NODE_ENV: production
    depends_on:
      - postgresdb
    networks:
      - app-network

  # Logging infrastructure
  loki:
    image: grafana/loki:2.9.2
    container_name: loki
    restart: unless-stopped
    ports:
      - "9184:3100"  # Using non-standard port 9184 externally
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - loki-data:/loki
    networks:
      - app-network

  promtail:
    image: grafana/promtail:2.9.2
    container_name: promtail
    restart: unless-stopped
    volumes:
      - app-logs:/var/log/app-logs:ro
      - ./promtail-config.yaml:/etc/promtail/config.yml
      - /var/run/docker.sock:/var/run/docker.sock
    command: -config.file=/etc/promtail/config.yml
    depends_on:
      - loki
    networks:
      - app-network

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    # Remove external port - Nginx will proxy to it
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_INSTALL_PLUGINS=grafana-piechart-panel
      - GF_AUTH_BASIC_ENABLED=true
      - GF_SECURITY_DISABLE_GRAVATAR=true
      - GF_SERVER_ROOT_URL=https://babloapp.com/metrics
      - GF_SERVER_SERVE_FROM_SUB_PATH=true
      - GF_SERVER_DOMAIN=babloapp.com
      - GF_SERVER_ENFORCE_DOMAIN=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - loki
    networks:
      - app-network

  nginx:
    image: nginx:stable-alpine
    container_name: nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf:/etc/nginx/conf.d
      - ${SSL_CERT_PATH}:/etc/nginx/certs/cert.pem:ro
      - ${SSL_KEY_PATH}:/etc/nginx/certs/key.pem:ro
    depends_on:
      - server
      - grafana
    networks:
      - app-network

networks:
  app-network:
    driver: bridge