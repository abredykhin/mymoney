version: "3.4"

volumes:
  pg_sandbox_data:
  pg_development_data:
  server_data:
  db_data:
  redis-data:  
  app-logs:
    driver: local
    driver_opts:
      type: none
      device: /opt/app-logs/  # Replace with your desired path
      o: bind  
  
services:
  postgresdb:
    image: postgres:16.2
    restart: unless-stopped
    env_file: ./.env
    volumes:
      - ./db-data:/var/lib/postgresql/data
      - ./database/create.sql:/docker-entrypoint-initdb.d/create.sql   

  redis:
    image: redis:alpine
    volumes:
      - redis-data:/data
    restart: unless-stopped
    command: redis-server --appendonly yes
    networks:
      - app-network

  server:
    build: ./server
    env_file: ./.env
    restart: unless-stopped
    ports:
      - 5001:5001
      - 80:5001
      - 443:443
    environment:
      PLAID_CLIENT_ID:
      PLAID_SECRET_SANDBOX:
      PLAID_SECRET_PROD:
      PLAID_SANDBOX_REDIRECT_URI:
      PLAID_DEVELOPMENT_REDIRECT_URI:
      PLAID_ENV:
      PORT: 5001
      DB_PORT: 5432
      DB_HOST_NAME: postgresdb
      NODE_ENV: development
      REDIS_HOST: redis
      REDIS_PORT: 6379      
    depends_on:
      - postgresdb
      - redis
    stdin_open: true
    tty: true
    volumes:
      - ./server:/opt/server  # <- Breaks bccrypt and discouraged generally
      - /opt/server/node_modules # anonymous volume for node_modules only
      - ./server/static:/opt/server/static # Mount the static folder only
      - app-logs:/opt/server/logs # Persist logs using the app-logs volume

  migrate-db:
    build:
      context: .
      dockerfile: Dockerfile.migrate-db
    env_file: ./.env
    depends_on:
      - postgresdb
    networks:
      - mynetwork

networks:
  app-network:
    driver: bridge